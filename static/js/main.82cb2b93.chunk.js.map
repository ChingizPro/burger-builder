{"version":3,"sources":["Components/Burger/BurgerIngredient/BurgerIngredient.module.css","Components/Burger/BuildControls/BuildControl/BuildControl.module.css","Components/Burger/Burger.module.css","Components/Layout/Layout.module.css","Components/Burger/BuildControls/BuildControls.module.css","hoc/Wrapper/Wrapper.js","Components/Layout/Layout.js","Components/Burger/BurgerIngredient/BurgerIngredient.js","Components/Burger/Burger.js","Components/Burger/BuildControls/BuildControl/BuildControl.js","Components/Burger/BuildControls/BuildControls.js","Containers/BurgerBuilder/BurgerBuilder.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Wrapper","props","children","Layout","className","classes","content","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","length","BuildControl","Label","label","Less","More","controls","BuildControls","control","BurgerBuilder","state","salad","meat","cheese","bacon","this","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82cb2b93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__34C0c\",\"BreadTop\":\"BurgerIngredient_BreadTop__3jaeF\",\"Seeds1\":\"BurgerIngredient_Seeds1__3yaYr\",\"Seeds2\":\"BurgerIngredient_Seeds2__3O4zq\",\"Meat\":\"BurgerIngredient_Meat__oIsr4\",\"Cheese\":\"BurgerIngredient_Cheese__EdX88\",\"Salad\":\"BurgerIngredient_Salad__2UJfl\",\"Bacon\":\"BurgerIngredient_Bacon__2FfqK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2IzyO\",\"Label\":\"BuildControl_Label__2Rb4T\",\"Less\":\"BuildControl_Less__22afS\",\"More\":\"BuildControl_More__3F8_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2estx\",\"Burger-text\":\"Burger_Burger-text__3tkMj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Layout_content__1I57I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1wO66\"};","const Wrapper = props => props.children;\r\n\r\nexport default Wrapper;","import Wrapper from '../../hoc/Wrapper/Wrapper'\r\nimport classes from './Layout.module.css';\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Wrapper>\r\n            [Nav]\r\n            [Toolbar]\r\n            [Backdrop]\r\n            \r\n            <main className={classes.content}>\r\n                {props.children}\r\n            </main>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport classes from './BurgerIngredient.module.css';\r\n\r\nconst BurgerIngredient = props => {\r\n    let ingredient = null;\r\n\r\n    switch (props.type) {\r\n        case ('bread-bottom'):\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n            break;\r\n        case ('bread-top'):\r\n            ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>\r\n            );\r\n            break;\r\n        case ('meat'):\r\n            ingredient = <div className={classes.Meat}></div>;\r\n            break;\r\n        case ('cheese'):\r\n            ingredient = <div className={classes.Cheese}></div>;\r\n            break;\r\n        case ('salad'):\r\n            ingredient = <div className={classes.Salad}></div>;\r\n            break;\r\n        case ('bacon'):\r\n            ingredient = <div className={classes.Bacon}></div>;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n            break;\r\n    }\r\n\r\n    return ingredient;\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\nimport classes from './Burger.module.css';\r\n\r\nconst Burger = props => {\r\n    let transformedIngredients = Object.keys(props.ingredients).map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />\r\n        });\r\n    });\r\n\r\n    transformedIngredients = transformedIngredients.reduce((arr, el) => arr.concat(el), []);\r\n\r\n    if (transformedIngredients.length === 0) transformedIngredients = <p className={classes['Burger-text']\r\n    }> Please start adding ingredients!</p >\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type='bread-top' />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type='bread-bottom' />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Burger;","import { checkPropTypes } from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst BuildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less}>Less</button>\r\n        <button className={classes.More}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default BuildControl","import React from 'react';\r\n\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport classes from './BuildControls.module.css';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Meat', type: 'meat' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Bacon', type: 'bacon' }\r\n]\r\n\r\nconst BuildControls = () => (\r\n    <div className={classes.BuildControls}>\r\n        {controls.map(control => {\r\n            return <BuildControl key={control.label} label={control.label} />\r\n        })}\r\n    </div>\r\n);\r\n\r\nexport default BuildControls;","import React, { Component } from 'react';\r\n\r\nimport Wrapper from '../../hoc/Wrapper/Wrapper';\r\nimport Burger from '../../Components/Burger/Burger';\r\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls';\r\n\r\nclass BurgerBuilder extends Component {\r\n    // ! another approach\r\n    // constructor(props){\r\n    //     super(props);\r\n\r\n    //     this.state = {};\r\n    // }\r\n\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            meat: 0,\r\n            cheese: 0,\r\n            bacon: 0\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Wrapper>\r\n                <Burger ingredients={this.state.ingredients} />\r\n                <BuildControls />\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;","import Layout from './Components/Layout/Layout';\nimport BurgerBuilder from './Containers/BurgerBuilder/BurgerBuilder';\nimport './index.css';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <BurgerBuilder />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}